{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\froman\fcharset0 Times-Bold;\f2\froman\fcharset0 Times-Roman;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue233;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c0\c0\c93333;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid1\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\f1\b \cf0 {\listtext	1	}\expnd0\expndtw0\kerning0
@AppStorage\'a0
\f2\b0 reads and writes values from\'a0UserDefaults. This owns its data.\'a0{\field{\*\fldinst{HYPERLINK "https://www.hackingwithswift.com/quick-start/swiftui/what-is-the-appstorage-property-wrapper"}}{\fldrslt \cf3 \ul \ulc3 More info.}}\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 {\listtext	2	}\expnd0\expndtw0\kerning0
@Binding\'a0
\f2\b0 refers to value type data owned by a different view. Changing the binding locally changes the remote data too. This does not own its data.\'a0{\field{\*\fldinst{HYPERLINK "https://www.hackingwithswift.com/quick-start/swiftui/what-is-the-binding-property-wrapper"}}{\fldrslt \cf3 \ul \ulc3 More info.}}\
\ls1\ilvl0
\f1\b \kerning1\expnd0\expndtw0 {\listtext	1	}\expnd0\expndtw0\kerning0
@Environment\'a0
\f2\b0 lets us read data from the system, such as color scheme, accessibility options, and trait collections, but you can add your own keys here if you want. This does not own its data.\'a0{\field{\*\fldinst{HYPERLINK "https://www.hackingwithswift.com/quick-start/swiftui/what-is-the-environment-property-wrapper"}}{\fldrslt \cf3 \ul \ulc3 More info.}}\
\ls1\ilvl0
\f1\b \kerning1\expnd0\expndtw0 {\listtext	2	}\expnd0\expndtw0\kerning0
@EnvironmentObject\'a0
\f2\b0 reads a shared object that we placed into the environment. This does not own its data.\'a0{\field{\*\fldinst{HYPERLINK "https://www.hackingwithswift.com/quick-start/swiftui/what-is-the-environmentobject-property-wrapper"}}{\fldrslt \cf3 \ul \ulc3 More info.}}\
\ls1\ilvl0
\f1\b \kerning1\expnd0\expndtw0 {\listtext	3	}\expnd0\expndtw0\kerning0
@FetchRequest\'a0
\f2\b0 starts a Core Data fetch request for a particular entity. This owns its data.\'a0{\field{\*\fldinst{HYPERLINK "https://www.hackingwithswift.com/quick-start/swiftui/what-is-the-fetchrequest-property-wrapper"}}{\fldrslt \cf3 \ul \ulc3 More info.}}\
\ls1\ilvl0
\f1\b \kerning1\expnd0\expndtw0 {\listtext	4	}\expnd0\expndtw0\kerning0
@FocusedBinding
\f2\b0 \'a0is designed to watch for values in the key window, such as a text field that is currently selected. This does not own its data.\
\ls1\ilvl0
\f1\b \kerning1\expnd0\expndtw0 {\listtext	5	}\expnd0\expndtw0\kerning0
@FocusedValue
\f2\b0 \'a0is a simpler version of\'a0@FocusedBinding\'a0that doesn\'92t unwrap the bound value for you. This does not own its data.\
\ls1\ilvl0
\f1\b \kerning1\expnd0\expndtw0 {\listtext	6	}\expnd0\expndtw0\kerning0
@GestureState\'a0
\f2\b0 stores values associated with a gesture that is currently in progress, such as how far you have swiped, except it will be reset to its default value when the gesture stops. This owns its data.\'a0{\field{\*\fldinst{HYPERLINK "https://www.hackingwithswift.com/quick-start/swiftui/what-is-the-gesturestate-property-wrapper"}}{\fldrslt \cf3 \ul \ulc3 More info.}}\
\ls1\ilvl0
\f1\b \kerning1\expnd0\expndtw0 {\listtext	7	}\expnd0\expndtw0\kerning0
@Namespace
\f2\b0 \'a0creates an animation namespace to allow matched geometry effects, which can be shared by other views. This owns its data.\
\ls1\ilvl0
\f1\b \kerning1\expnd0\expndtw0 {\listtext	8	}\expnd0\expndtw0\kerning0
@NSApplicationDelegateAdaptor
\f2\b0 \'a0is used to create and register a class as the app delegate for a macOS app. This owns its data.\
\ls1\ilvl0
\f1\b \kerning1\expnd0\expndtw0 {\listtext	9	}\expnd0\expndtw0\kerning0
@ObservedObject
\f2\b0 \'a0refers to an instance of an external class that conforms to the\'a0ObservableObject\'a0protocol. This does not own its data.\'a0{\field{\*\fldinst{HYPERLINK "https://www.hackingwithswift.com/quick-start/swiftui/what-is-the-observedobject-property-wrapper"}}{\fldrslt \cf3 \ul \ulc3 More info.}}\
\ls1\ilvl0
\f1\b \kerning1\expnd0\expndtw0 {\listtext	10	}\expnd0\expndtw0\kerning0
@Published
\f2\b0 \'a0is attached to properties inside an\'a0ObservableObject, and tells SwiftUI that it should refresh any views that use this property when it is changed. This owns its data.\'a0{\field{\*\fldinst{HYPERLINK "https://www.hackingwithswift.com/quick-start/swiftui/what-is-the-published-property-wrapper"}}{\fldrslt \cf3 \ul \ulc3 More info.}}\
\ls1\ilvl0
\f1\b \kerning1\expnd0\expndtw0 {\listtext	11	}\expnd0\expndtw0\kerning0
@ScaledMetric
\f2\b0 \'a0reads the user\'92s Dynamic Type setting and scales numbers up or down based on an original value you provide. This owns its data.\'a0{\field{\*\fldinst{HYPERLINK "https://www.hackingwithswift.com/quick-start/swiftui/what-is-the-scaledmetric-property-wrapper"}}{\fldrslt \cf3 \ul \ulc3 More info.}}\
\ls1\ilvl0
\f1\b \kerning1\expnd0\expndtw0 {\listtext	12	}\expnd0\expndtw0\kerning0
@SceneStorage
\f2\b0 \'a0lets us save and restore small amounts of data for state restoration. This owns its data.\'a0{\field{\*\fldinst{HYPERLINK "https://www.hackingwithswift.com/quick-start/swiftui/what-is-the-scenestorage-property-wrapper"}}{\fldrslt \cf3 \ul \ulc3 More info.}}\
\ls1\ilvl0
\f1\b \kerning1\expnd0\expndtw0 {\listtext	13	}\expnd0\expndtw0\kerning0
@State
\f2\b0 \'a0lets us manipulate small amounts of value type data locally to a view. This owns its data.\'a0{\field{\*\fldinst{HYPERLINK "https://www.hackingwithswift.com/quick-start/swiftui/what-is-the-state-property-wrapper"}}{\fldrslt \cf3 \ul \ulc3 More info.}}\
\ls1\ilvl0
\f1\b \kerning1\expnd0\expndtw0 {\listtext	14	}\expnd0\expndtw0\kerning0
@StateObject\'a0
\f2\b0 is used to store new instances of reference type data that conforms to the\'a0ObservableObject\'a0protocol. This owns its data.\'a0{\field{\*\fldinst{HYPERLINK "https://www.hackingwithswift.com/quick-start/swiftui/what-is-the-stateobject-property-wrapper"}}{\fldrslt \cf3 \ul \ulc3 More info.}}\
\ls1\ilvl0
\f1\b \kerning1\expnd0\expndtw0 {\listtext	15	}\expnd0\expndtw0\kerning0
@UIApplicationDelegateAdaptor
\f2\b0 \'a0is used to create and register a class as the app delegate for an iOS app. This owns its data.\'a0{\field{\*\fldinst{HYPERLINK "https://www.hackingwithswift.com/quick-start/swiftui/what-is-the-uiapplicationdelegateadaptor-property-wrapper"}}{\fldrslt \cf3 \ul \ulc3 More info.}}\
}